Elm.View = Elm.View || {};
Elm.View.make = function (_elm) {
   "use strict";
   _elm.View = _elm.View || {};
   if (_elm.View.values) return _elm.View.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Actions = Elm.Actions.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Models = Elm.Models.make(_elm),
   $Players$List = Elm.Players.List.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var page = F2(function (address,model) {
      var viewModel = {players: model.players};
      return A2($Players$List.view,A2($Signal.forwardTo,address,$Actions.PlayersAction),viewModel);
   });
   var view = F2(function (address,model) {    return A2($Html.div,_U.list([]),_U.list([A2(page,address,model)]));});
   return _elm.View.values = {_op: _op,view: view,page: page};
};